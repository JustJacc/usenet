version: "2.3"

services:
  reverse-proxy:
    image: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    depends_on:
      - hydra
      - nzbget
      - ombi
      - plex
      - sonarr
      - radarr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  # plex media server
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    volumes:
      - ${CONFIG_DIR}/plex:/config
      - ${PLEX_TRANSCODE_DIR}:/transcode
      - ${MEDIA_DIR}:/media
    environment:
      - TZ=Europe/London
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  # ombi
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    volumes:
      - ${CONFIG_DIR}/ombi:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.http.routers.ombi.rule=Host(`ombi.${LOCAL_DOMAIN}`)"
      - "traefik.http.routers.ombi-public.rule=Host(`request.${PUBLIC_DOMAIN}`)"
    restart: unless-stopped

  # nzbget
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    volumes:
      - ${CONFIG_DIR}/nzbget:/config
      - ${MEDIA_DIR}/downloads:/downloads
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.${LOCAL_DOMAIN}`)"
    restart: unless-stopped

  hydra:
    image: linuxserver/nzbhydra2
    container_name: hydra
    volumes:
      - ${CONFIG_DIR}/hydra:/config
    labels:
      - "traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${LOCAL_DOMAIN}`)"
    restart: unless-stopped

  # sonarr
  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    volumes:
      - ${CONFIG_DIR}/sonarr:/config
      - ${MEDIA_DIR}:/media
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${LOCAL_DOMAIN}`)"
    restart: unless-stopped

  # radarr
  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${MEDIA_DIR}:/media
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
    labels:
      - "traefik.http.routers.radarr.rule=Host(`radarr.${LOCAL_DOMAIN}`)"
    restart: unless-stopped
