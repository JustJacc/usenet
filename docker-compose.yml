version: '2.3'

services:
  # traefik
  traefik:
    image: traefik:latest
    command: --web --docker --docker.watch --docker.domain=${DOMAIN} --docker.exposedbydefault=false --acme.domains=${DOMAIN}
    container_name: traefik
    hostname: traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIG}/traefik/acme.json:/acme.json
      - ${CONFIG}/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ${CONFIG}/traefik/.htpasswd:/etc/traefik/.htpasswd:ro
    labels:
      traefik.enable: "true"
      traefik.frontend.rule: "Host:monitor.${DOMAIN}"
      traefik.port: "8080"
      com.centurylinklabs.watchtower.enable: "true"
  
  # ddclient
  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    volumes:
      - ${CONFIG}/ddclient:/config
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: unless-stopped

  # plex media server
  plex:
    image: plexinc/pms-docker:plexpass
    container_name: plex
    volumes:
      - /srv/config/plex:/config
      - /srv/transcode:/transcode
      - /srv/media:/data
    environment:
      - TZ=Europe/London
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  # plexpy
  plexpy:
    image: linuxserver/plexpy
    container_name: plexpy
    volumes:
      - /srv/config/plexpy:/config
      - /etc/localtime:/etc/localtime:ro
      - /srv/config/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 8081:8181
    restart: unless-stopped

  # ombi
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    volumes:
      - /srv/config/ombi:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
    networks:
      - downloaders
    ports:
      - 8082:3579
    restart: unless-stopped

  # nzbget
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    hostname: nzbget
    volumes:
      - /srv/config/nzbget:/config
      - /srv/downloads/complete:/complete
      - /srv/downloads:/downloads
    environment:
      - PGID
      - PUID
      - TZ
    networks:
      - downloaders
    ports:
      - 8083:6789
    labels:
      traefik.enable: "true"
      traefik.port: "6789"
      traefik.frontend.rule: "Host:nzbget.${DOMAIN}"
      com.centurylinklabs.watchtower.enable: "true"
    restart: unless-stopped

  # sonarr
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    hostname: sonarr
    volumes:
      - /srv/config/sonarr:/config
      - /etc/localtime:/etc/localtime:ro
      - /srv/media/tv:/tv
      - /srv/media/kids:/kids
      - /srv/media/anime:/anime
      - /srv/downloads:/downloads
    environment:
      - PGID
      - PUID
      - TZ
    networks:
      - downloaders
    ports:
      - 8084:8989
    cpus: 0.5
    labels:
      traefik.enable: "true"
      traefik.port: "8989"
      traefik.frontend.rule: "Host:sonarr.${DOMAIN}"
      com.centurylinklabs.watchtower.enable: "true"

    restart: unless-stopped

  # radarr
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - /srv/config/radarr:/config
      - /srv/media/movies:/movies
      - /srv/downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
    networks:
      - downloaders
    ports:
      - 8085:7878
    cpus: 0.5
    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/config/portainer:/data
    ports:
      - 8080:9000
    restart: unless-stopped

  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --label-enable --schedule="0 2 * * *"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: unless-stopped

networks:
  downloaders:
